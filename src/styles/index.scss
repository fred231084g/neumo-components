// Import core Sass modules
@use "sass:math";
@use "sass:map";
@use "sass:color";
@use "sass:meta";

// Import our modules with namespacing
@use 'variables' as vars;
@use 'mixins' as mix;
@use 'devices' as dev;
@use 'neumorphix' as neu;
@use 'jitterfix' as jitter;
@use 'globals' as *;

// Import components with namespacing
@use '../components/NeumoButton/NeumoButton.scss' as button;
@use '../components/NeumoCard/NeumoCard.scss' as card;

// Selectively forward public API
@forward 'neumorphix' show
  neu-effect,
  flat,
  concave,
  convex,
  neu-interactive,
  focus-visible,
  theme-aware,
  contrast-mode,
  get-theme-value;

@forward 'jitterfix' show
  hover-shadow,
  hover-fixed,
  jitter-shadow,
  jitter-fixed;

// Theme variables
:root {
  // Colors
  --color-neutral-50: #{map.get(vars.$colors, 'neutral', 50)};
  --color-neutral-100: #{map.get(vars.$colors, 'neutral', 100)};
  --color-neutral-200: #{map.get(vars.$colors, 'neutral', 200)};
  --color-neutral-300: #{map.get(vars.$colors, 'neutral', 300)};
  --color-neutral-400: #{map.get(vars.$colors, 'neutral', 400)};
  --color-neutral-500: #{map.get(vars.$colors, 'neutral', 500)};
  --color-neutral-600: #{map.get(vars.$colors, 'neutral', 600)};
  --color-neutral-700: #{map.get(vars.$colors, 'neutral', 700)};
  --color-neutral-800: #{map.get(vars.$colors, 'neutral', 800)};
  --color-neutral-900: #{map.get(vars.$colors, 'neutral', 900)};
  
  // Theme colors
  --bg-primary: var(--color-neutral-100);
  --bg-secondary: var(--color-neutral-50);
  --text-primary: var(--color-neutral-900);
  --text-secondary: var(--color-neutral-600);
  
  // Interactive states
  --hover-opacity: 0.05;
  --active-opacity: 0.1;
  --disabled-opacity: 0.5;
  --focus-ring-color: #{vars.$focus-ring-color};
  
  // Spacing
  --space-1: 0.25rem;
  --space-2: 0.5rem;
  --space-3: 0.75rem;
  --space-4: 1rem;
  --space-5: 1.25rem;
  --space-6: 1.5rem;
  --space-8: 2rem;
  --space-10: 2.5rem;
  --space-12: 3rem;
  
  // Layout
  --container-max-width: #{dev.get-breakpoint("desktop", "lg")};
  --container-padding: var(--space-4);
  --grid-gap: var(--space-6);
  
  // Animation
  --transition-fast: 150ms;
  --transition-base: 200ms;
  --transition-slow: 300ms;
  --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
  --ease-out: cubic-bezier(0, 0, 0.2, 1);
  --ease-in: cubic-bezier(0.4, 0, 1, 1);
  
  // Typography
  --font-sans: #{vars.$font-family-sans};
  --font-mono: #{vars.$font-family-mono};
  --font-size-base: 1rem;
  --line-height-base: 1.5;
  
  // Platform-specific
  --safe-area-inset-top: env(safe-area-inset-top, 20px);
  --safe-area-inset-bottom: env(safe-area-inset-bottom, 20px);
  
  // Neumorphic settings
  --neu-shadow-light: #{map.get(vars.$neumorphic, 'shadow', 'light')};
  --neu-shadow-dark: #{map.get(vars.$neumorphic, 'shadow', 'dark')};
  --neu-blur: #{map.get(vars.$neumorphic, 'blur')};
}

// Dark mode
@media (prefers-color-scheme: dark) {
  :root {
    --bg-primary: var(--color-neutral-900);
    --bg-secondary: var(--color-neutral-800);
    --text-primary: var(--color-neutral-50);
    --text-secondary: var(--color-neutral-400);
    --hover-opacity: 0.1;
    --active-opacity: 0.2;
  }
}

// High contrast
@media (prefers-contrast: more) {
  :root {
    --bg-primary: #ffffff;
    --bg-secondary: #ffffff;
    --text-primary: #000000;
    --text-secondary: #000000;
    --hover-opacity: 0;
    --active-opacity: 0;
    
    * {
      border-color: currentColor !important;
    }
  }
}

// Reduced motion
@media (prefers-reduced-motion: reduce) {
  :root {
    --transition-fast: 0.01ms;
    --transition-base: 0.01ms;
    --transition-slow: 0.01ms;
    
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
}

// Base styles
html {
  font-family: var(--font-sans);
  font-size: var(--font-size-base);
  line-height: var(--line-height-base);
  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  margin: 0;
  padding: var(--container-padding);
  padding-top: var(--safe-area-inset-top);
  padding-bottom: var(--safe-area-inset-bottom);
  background-color: var(--bg-primary);
  color: var(--text-primary);
}

// Export modules for component use
:export {
  breakpoints: {
    mobile: dev.get-breakpoint("mobile", "md");
    tablet: dev.get-breakpoint("tablet", "md");
    desktop: dev.get-breakpoint("desktop", "md");
  }
  
  colors: {
    primary: vars.$color-primary;
    secondary: vars.$color-secondary;
    neutral: vars.$color-neutral-500;
  }
  
  spacing: {
    base: vars.$spacing-base;
    large: vars.$spacing-large;
    small: vars.$spacing-small;
  }

  
}