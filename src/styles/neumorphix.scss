@use 'sass:color';
@use 'sass:meta';
@use 'sass:map';

// Enhanced Theme Configuration
$themes: (
  light: (
    bg: #e0e0e0,
    text: #1a1a1a,
    text-secondary: #404040,
    shadow-dark: #b8b8b8,
    shadow-light: #ffffff,
    contrast-border: rgba(0, 0, 0, 0.12),
    focus-ring: #0066cc
  ),
  dark: (
    bg: #2a2a2a,
    text: #ffffff,
    text-secondary: #e0e0e0,
    shadow-dark: #1a1a1a,
    shadow-light: #3a3a3a,
    contrast-border: rgba(255, 255, 255, 0.12),
    focus-ring: #4d9fff
  ),
  high-contrast: (
    bg: #ffffff,
    text: #000000,
    text-secondary: #1a1a1a,
    shadow-dark: #000000,
    shadow-light: #ffffff,
    contrast-border: #000000,
    focus-ring: #0000ff
  )
);

// Theme System Utilities
@function get-theme-value($theme, $key) {
  @return map.get(map.get($themes, $theme), $key);
}

@mixin theme-aware($property, $theme-key) {
  @each $theme, $values in $themes {
    .theme-#{$theme} & {
      #{$property}: get-theme-value($theme, $theme-key);
    }
  }
}

@mixin contrast-mode {
  @media (prefers-contrast: more) {
    @content;
  }
}

// Enhanced Neumorphic Effects
@mixin neu-effect(
  $radius: 8px,
  $mode: light,
  $offset: 8px,
  $blur: 16px,
  $intensity: 1
) {
  $theme-values: map.get($themes, $mode);
  $shadow-dark: map.get($theme-values, 'shadow-dark');
  $shadow-light: map.get($theme-values, 'shadow-light');
  $border-color: map.get($theme-values, 'contrast-border');
  $bg-color: map.get($theme-values, 'bg');
  $text-color: map.get($theme-values, 'text');
  $focus-ring: map.get($theme-values, 'focus-ring');

  & {
    border-radius: $radius;
    background: $bg-color;
    color: $text-color;
    
    box-shadow: 
      #{$offset} #{$offset} #{$blur} color.adjust($shadow-dark, $alpha: -0.8 * (1 - $intensity)),
      -#{$offset} -#{$offset} #{$blur} color.adjust($shadow-light, $alpha: -0.8 * (1 - $intensity));

    @include contrast-mode {
      border: 1px solid $border-color;
      box-shadow: none;
    }

    &:focus-visible {
      outline: 2px solid $focus-ring;
      outline-offset: 2px;
    }
  }
}

// Enhanced Flat Style
@mixin neu-flat(
  $mode: light,
  $gradient-angle: 145deg
) {
  $theme-values: map.get($themes, $mode);
  $bg-color: map.get($theme-values, 'bg');
  $border-color: map.get($theme-values, 'contrast-border');

  & {
    background: linear-gradient(
      $gradient-angle,
      color.scale($bg-color, $lightness: 5%),
      color.scale($bg-color, $lightness: -5%)
    );
    
    @include contrast-mode {
      background: $bg-color;
      border: 1px solid $border-color;
    }
  }
}

// Enhanced Pressed Effect
@mixin neu-pressed(
  $mode: light,
  $radius: 8px,
  $depth: 2px
) {
  $theme-values: map.get($themes, $mode);
  $bg-color: map.get($theme-values, 'bg');
  $border-color: map.get($theme-values, 'contrast-border');

  & {
    background: $bg-color;
    border-radius: $radius;
    box-shadow: 
      inset #{$depth} #{$depth} #{$depth * 2} color.change(#000000, $alpha: 0.2),
      inset -#{$depth} -#{$depth} #{$depth * 2} color.change(#ffffff, $alpha: 0.2);

    @include contrast-mode {
      box-shadow: inset 0 0 0 1px $border-color;
    }
  }
}

// Interactive States
@mixin neu-interactive($mode: light) {
  $theme-values: map.get($themes, $mode);
  $bg-color: map.get($theme-values, 'bg');

  & {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    
    &:hover {
      transform: translateY(-1px);
      
      @include contrast-mode {
        text-decoration: underline;
        transform: none;
      }
    }
    
    &:active {
      transform: translateY(1px);
      
      @include contrast-mode {
        background-color: color.scale($bg-color, $lightness: -5%);
        transform: none;
      }
    }
  }
}

// Enhanced Focus States
@mixin focus-visible($mode: light) {
  $theme-values: map.get($themes, $mode);
  $focus-ring: map.get($theme-values, 'focus-ring');

  & {
    &:focus-visible {
      outline: 2px solid $focus-ring;
      outline-offset: 2px;
      
      @include contrast-mode {
        outline-width: 3px;
      }
    }
  }
}

// Color Contrast Utilities
@function get-contrast-color($background, $light-color, $dark-color) {
  $luminance: (color.red($background) * 0.299 + color.green($background) * 0.587 + color.blue($background) * 0.114) / 255;
  @return if($luminance > 0.6, $dark-color, $light-color);
}

// Component Base Classes
.neu-base {
  @include neu-effect($mode: light);
  @include focus-visible(light);

  & {
    position: relative;
    box-sizing: border-box;
  }
}

.neu-interactive-base {
  @include neu-interactive(light);

  & {
    cursor: pointer;
    
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      
      @include contrast-mode {
        opacity: 0.4;
      }
    }
  }
}