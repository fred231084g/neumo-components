@use "sass:map";
@use "sass:meta";

// Color System
$colors: (
  'neutral': (
    50: #fafafa,
    100: #f0f0f0,
    200: #e4e4e4,
    300: #d1d1d1,
    400: #a3a3a3,
    500: #737373,
    600: #525252,
    700: #404040,
    800: #262626,
    900: #171717
  ),
  'primary': (
    50: #e6f0ff,
    100: #cce0ff,
    200: #99c2ff,
    300: #66a3ff,
    400: #3385ff,
    500: #0066ff,
    600: #0052cc,
    700: #003d99,
    800: #002966,
    900: #001433
  )
);


// Screen Breakpoints
// Breakpoint Maps
$breakpoints: (
  mobile: (
    xs: 360px,
    sm: 375px,
    md: 414px,
    lg: 480px,
    xl: 640px
  ),
  tablet: (
    xs: 601px,
    sm: 768px,
    md: 960px,
    lg: 1024px,
    xl: 1280px
  ),
  desktop: (
    xs: 1024px,
    sm: 1280px,
    md: 1440px,
    lg: 1680px,
    xl: 1920px
  )
);


// Neumorphic Configuration
$neumorphic: (
  'shadow': (
    'light': 5px,
    'dark': -5px
  ),
  'blur': 10px,
  'colors': (
    'light': #ffffff,
    'dark': #000000
  )
);

// Font families
$font-family-sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
$font-family-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;


// Functions to access nested maps
@function get-color($color, $shade) {
  @return map.get(map.get($colors, $color), $shade);
}

@function get-breakpoint($device, $size) {
  @return map.get(map.get($breakpoints, $device), $size);
}

@function get-neumorphic($category, $value) {
  @return map.get(map.get($neumorphic, $category), $value);
}

// CSS Custom Properties Export
:root {
  // Colors
  @each $color, $shades in $colors {
    @each $shade, $value in $shades {
      --color-#{$color}-#{$shade}: #{$value};
    }
  }

  // Breakpoints
  @each $device, $sizes in $breakpoints {
    @each $size, $value in $sizes {
      --breakpoint-#{$device}-#{$size}: #{$value};
    }
  }

  // Neumorphic
  --neu-blur: #{map.get($neumorphic, 'blur')};

  --neu-shadow-dark: #{get-neumorphic('shadow', 'dark')};

  --neu-light-color: #{get-neumorphic('colors', 'light')};

  --neu-dark-color: #{get-neumorphic('colors', 'dark')};
}

// Export variables
:export {
  @each $color, $shades in $colors {
    @each $shade, $value in $shades {
      color-#{$color}-#{$shade}: $value;
    }
  }
}

