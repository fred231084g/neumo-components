@use "sass:map";
@use "variables" as vars;

// Get breakpoint value helper
@function get-breakpoint($device, $size) {
  @return map.get(map.get(vars.$breakpoints, $device), $size);
}

// Mobile-first mixins
@mixin mobile($size) {
  @media (max-width: get-breakpoint("mobile", $size)) {
    @content;
  }
}

@mixin tablet($size) {
  @media (min-width: get-breakpoint("tablet", $size)) {
    @content;
  }
}

@mixin desktop($size) {
  @media (min-width: get-breakpoint("desktop", $size)) {
    @content;
  }
}

// Device-specific mixins
@mixin mobile-only {
  @media (max-width: #{get-breakpoint("tablet", "xs") - 1}) {
    @content;
  }
}

@mixin tablet-only {
  @media (min-width: get-breakpoint("tablet", "xs")) and 
         (max-width: #{get-breakpoint("desktop", "xs") - 1}) {
    @content;
  }
}

@mixin desktop-only {
  @media (min-width: get-breakpoint("desktop", "xs")) {
    @content;
  }
}

// Orientation mixins
@mixin landscape {
  @media (orientation: landscape) {
    @content;
  }
}

@mixin portrait {
  @media (orientation: portrait) {
    @content;
  }
}

// High DPI screens
@mixin retina {
  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @content;
  }
}

// Touch capability
@mixin touch-device {
  @media (hover: none) and (pointer: coarse) {
    @content;
  }
}

@mixin mouse-device {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

// Container widths
$container-widths: (
  sm: get-breakpoint("mobile", "xl"),
  md: get-breakpoint("tablet", "md"),
  lg: get-breakpoint("desktop", "sm"),
  xl: get-breakpoint("desktop", "md")
);

// Container mixin
@mixin container($size: "md") {
  width: 100%;
  max-width: map.get($container-widths, $size);
  margin-right: auto;
  margin-left: auto;
  padding-right: 1rem;
  padding-left: 1rem;
  
  @include tablet("md") {
    padding-right: 2rem;
    padding-left: 2rem;
  }
}

// Safe area insets for modern mobile devices
@mixin safe-area-insets {
  padding-top: env(safe-area-inset-top, 0px);
  padding-right: env(safe-area-inset-right, 0px);
  padding-bottom: env(safe-area-inset-bottom, 0px);
  padding-left: env(safe-area-inset-left, 0px);
}

// Export mixins
:export {
  containerSm: map.get($container-widths, "sm");
  containerMd: map.get($container-widths, "md");
  containerLg: map.get($container-widths, "lg");
  containerXl: map.get($container-widths, "xl");
}